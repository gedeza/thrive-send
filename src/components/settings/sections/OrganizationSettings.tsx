'use client';

import React, { useState, useEffect } from 'react';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { z } from 'zod';
import { useOrganization } from '@clerk/nextjs';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';
import { Switch } from '@/components/ui/switch';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { \n  Building2, \n  Globe, \n  Palette, \n  Upload,\n  Check,\n  AlertCircle,\n  Loader2,\n  Crown,\n  Users,\n  Shield,\n  Settings,\n  ExternalLink\n} from 'lucide-react';\nimport { useOrganizationSettings } from '@/contexts/SettingsContext';\nimport { cn } from '@/lib/utils';\n\n// Form validation schema\nconst organizationSchema = z.object({\n  name: z.string()\n    .min(2, 'Organization name must be at least 2 characters')\n    .max(100, 'Organization name must be less than 100 characters'),\n  slug: z.string()\n    .min(3, 'Slug must be at least 3 characters')\n    .max(50, 'Slug must be less than 50 characters')\n    .regex(/^[a-z0-9-]+$/, 'Slug can only contain lowercase letters, numbers, and hyphens'),\n  website: z.string()\n    .url('Please enter a valid URL')\n    .optional()\n    .or(z.literal('')),\n  customDomain: z.string()\n    .regex(/^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\\.[a-zA-Z]{2,}$/, 'Please enter a valid domain')\n    .optional()\n    .or(z.literal(''))\n});\n\ntype OrganizationFormData = z.infer<typeof organizationSchema>;\n\n// Color picker component\ninterface ColorPickerProps {\n  label: string;\n  value: string;\n  onChange: (color: string) => void;\n  disabled?: boolean;\n}\n\nfunction ColorPicker({ label, value, onChange, disabled }: ColorPickerProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  \n  const predefinedColors = [\n    '#007BFF', '#28A745', '#DC3545', '#FFC107', '#17A2B8',\n    '#6F42C1', '#E83E8C', '#20C997', '#FD7E14', '#6C757D'\n  ];\n  \n  return (\n    <div className=\"space-y-2\">\n      <Label>{label}</Label>\n      <div className=\"flex items-center gap-3\">\n        <div \n          className=\"w-10 h-10 rounded-lg border-2 border-muted cursor-pointer flex items-center justify-center\"\n          style={{ backgroundColor: value }}\n          onClick={() => !disabled && setIsOpen(!isOpen)}\n        >\n          <Palette className=\"h-4 w-4 text-white mix-blend-difference\" />\n        </div>\n        \n        <Input\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n          placeholder=\"#000000\"\n          className=\"font-mono\"\n          disabled={disabled}\n        />\n      </div>\n      \n      {isOpen && (\n        <div className=\"grid grid-cols-5 gap-2 p-2 border rounded-lg bg-background\">\n          {predefinedColors.map((color) => (\n            <button\n              key={color}\n              className=\"w-8 h-8 rounded border-2 border-muted hover:border-foreground transition-colors\"\n              style={{ backgroundColor: color }}\n              onClick={() => {\n                onChange(color);\n                setIsOpen(false);\n              }}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Logo upload component\ninterface LogoUploadProps {\n  label: string;\n  currentUrl?: string;\n  onUpload: (url: string) => void;\n  disabled?: boolean;\n}\n\nfunction LogoUpload({ label, currentUrl, onUpload, disabled }: LogoUploadProps) {\n  const [uploading, setUploading] = useState(false);\n  \n  const handleFileUpload = async (file: File) => {\n    if (!file.type.startsWith('image/')) {\n      alert('Please select an image file');\n      return;\n    }\n    \n    if (file.size > 2 * 1024 * 1024) { // 2MB limit\n      alert('Image size must be less than 2MB');\n      return;\n    }\n    \n    setUploading(true);\n    \n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('type', 'logo');\n      \n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (response.ok) {\n        const { url } = await response.json();\n        onUpload(url);\n      } else {\n        throw new Error('Upload failed');\n      }\n    } catch (_error) {\n      console.error("", _error);\n      setSaveStatus('error');\n      setTimeout(() => setSaveStatus('idle'), 5000);\n    }\n  };\n  \n  // Show access denied for non-admins\n  if (!canManage) {\n    return (\n      <Alert>\n        <Shield className=\"h-4 w-4\" />\n        <AlertDescription>\n          You don't have permission to manage organization settings. Please contact an administrator.\n        </AlertDescription>\n      </Alert>\n    );\n  }\n  \n  // Show loading state\n  if (!isLoaded || loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"flex flex-col items-center gap-4\">\n          <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n          <p className=\"text-sm text-muted-foreground\">Loading organization settings...</p>\n        </div>\n      </div>\n    );\n  }\n  \n  if (!organization) {\n    return (\n      <Alert variant=\"destructive\">\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertDescription>\n          Unable to load organization data. Please refresh the page and try again.\n        </AlertDescription>\n      </Alert>\n    );\n  }\n  \n  return (\n    <div className=\"space-y-8\">\n      {/* General Information */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Building2 className=\"h-5 w-5\" />\n            General Information\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\">Organization Name *</Label>\n                <Input\n                  id=\"name\"\n                  {...register('name')}\n                  placeholder=\"Enter organization name\"\n                  disabled={saving}\n                />\n                {errors.name && (\n                  <p className=\"text-sm text-destructive\">{errors.name.message}</p>\n                )}\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"slug\">Organization Slug *</Label>\n                <div className=\"relative\">\n                  <Input\n                    id=\"slug\"\n                    {...register('slug')}\n                    placeholder=\"organization-slug\"\n                    disabled={saving}\n                    className={cn(\n                      slugAvailable === false && 'border-destructive',\n                      slugAvailable === true && 'border-green-500'\n                    )}\n                  />\n                  {checkingSlug && (\n                    <Loader2 className=\"absolute right-3 top-3 h-4 w-4 animate-spin text-muted-foreground\" />\n                  )}\n                  {!checkingSlug && slugAvailable === true && (\n                    <Check className=\"absolute right-3 top-3 h-4 w-4 text-green-500\" />\n                  )}\n                  {!checkingSlug && slugAvailable === false && (\n                    <AlertCircle className=\"absolute right-3 top-3 h-4 w-4 text-destructive\" />\n                  )}\n                </div>\n                {errors.slug && (\n                  <p className=\"text-sm text-destructive\">{errors.slug.message}</p>\n                )}\n                {slugAvailable === false && (\n                  <p className=\"text-sm text-destructive\">This slug is already taken</p>\n                )}\n                <p className=\"text-xs text-muted-foreground\">\n                  Used in URLs: app.thrivesend.com/{watchedSlug || 'your-slug'}\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"website\">Website</Label>\n                <div className=\"relative\">\n                  <Globe className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                  <Input\n                    id=\"website\"\n                    {...register('website')}\n                    placeholder=\"https://yourcompany.com\"\n                    className=\"pl-10\"\n                    disabled={saving}\n                  />\n                </div>\n                {errors.website && (\n                  <p className=\"text-sm text-destructive\">{errors.website.message}</p>\n                )}\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"customDomain\">Custom Domain</Label>\n                <Input\n                  id=\"customDomain\"\n                  {...register('customDomain')}\n                  placeholder=\"app.yourcompany.com\"\n                  disabled={saving}\n                />\n                {errors.customDomain && (\n                  <p className=\"text-sm text-destructive\">{errors.customDomain.message}</p>\n                )}\n                <p className=\"text-xs text-muted-foreground\">\n                  Configure a custom domain for white-labeling\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center justify-between pt-4 border-t\">\n              <div className=\"flex items-center gap-2\">\n                {saveStatus === 'saved' && (\n                  <div className=\"flex items-center gap-2 text-green-600\">\n                    <Check className=\"h-4 w-4\" />\n                    <span className=\"text-sm\">Organization updated successfully</span>\n                  </div>\n                )}\n                {saveStatus === 'error' && (\n                  <div className=\"flex items-center gap-2 text-red-600\">\n                    <AlertCircle className=\"h-4 w-4\" />\n                    <span className=\"text-sm\">Failed to update organization</span>\n                  </div>\n                )}\n              </div>\n              \n              <Button\n                type=\"submit\"\n                disabled={!isDirty || saving || slugAvailable === false}\n                className=\"min-w-[120px]\"\n              >\n                {saveStatus === 'saving' ? (\n                  <>\n                    <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                    Saving...\n                  </>\n                ) : (\n                  'Save Changes'\n                )}\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n      \n      {/* Branding */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Palette className=\"h-5 w-5\" />\n            Branding\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Logo Uploads */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <LogoUpload\n              label=\"Light Logo\"\n              currentUrl={settings?.branding?.logoVariants?.light}\n              onUpload={(url) => updateSetting('branding.logoVariants.light', url)}\n              disabled={saving}\n            />\n            \n            <LogoUpload\n              label=\"Dark Logo\"\n              currentUrl={settings?.branding?.logoVariants?.dark}\n              onUpload={(url) => updateSetting('branding.logoVariants.dark', url)}\n              disabled={saving}\n            />\n            \n            <LogoUpload\n              label=\"Favicon\"\n              currentUrl={settings?.branding?.logoVariants?.favicon}\n              onUpload={(url) => updateSetting('branding.logoVariants.favicon', url)}\n              disabled={saving}\n            />\n          </div>\n          \n          <Separator />\n          \n          {/* Color Palette */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-sm font-semibold\">Color Palette</h3>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <ColorPicker\n                label=\"Primary Color\"\n                value={settings?.branding?.colors?.primary || '#007BFF'}\n                onChange={(color) => updateSetting('branding.colors.primary', color)}\n                disabled={saving}\n              />\n              \n              <ColorPicker\n                label=\"Secondary Color\"\n                value={settings?.branding?.colors?.secondary || '#6C757D'}\n                onChange={(color) => updateSetting('branding.colors.secondary', color)}\n                disabled={saving}\n              />\n              \n              <ColorPicker\n                label=\"Accent Color\"\n                value={settings?.branding?.colors?.accent || '#28A745'}\n                onChange={(color) => updateSetting('branding.colors.accent', color)}\n                disabled={saving}\n              />\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Default Settings */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Settings className=\"h-5 w-5\" />\n            Default Settings\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label>Default Timezone</Label>\n              <Select\n                value={settings?.defaults?.timezone || 'UTC'}\n                onValueChange={(value) => updateSetting('defaults.timezone', value)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select timezone\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"UTC\">UTC</SelectItem>\n                  <SelectItem value=\"America/New_York\">Eastern Time</SelectItem>\n                  <SelectItem value=\"America/Chicago\">Central Time</SelectItem>\n                  <SelectItem value=\"America/Denver\">Mountain Time</SelectItem>\n                  <SelectItem value=\"America/Los_Angeles\">Pacific Time</SelectItem>\n                  <SelectItem value=\"Europe/London\">London Time</SelectItem>\n                  <SelectItem value=\"Europe/Paris\">Central European Time</SelectItem>\n                  <SelectItem value=\"Asia/Tokyo\">Japan Time</SelectItem>\n                  <SelectItem value=\"Australia/Sydney\">Australian Eastern Time</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label>Default Currency</Label>\n              <Select\n                value={settings?.defaults?.currency || 'USD'}\n                onValueChange={(value) => updateSetting('defaults.currency', value)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select currency\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"USD\">USD - US Dollar</SelectItem>\n                  <SelectItem value=\"EUR\">EUR - Euro</SelectItem>\n                  <SelectItem value=\"GBP\">GBP - British Pound</SelectItem>\n                  <SelectItem value=\"CAD\">CAD - Canadian Dollar</SelectItem>\n                  <SelectItem value=\"AUD\">AUD - Australian Dollar</SelectItem>\n                  <SelectItem value=\"ZAR\">ZAR - South African Rand</SelectItem>\n                  <SelectItem value=\"JPY\">JPY - Japanese Yen</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label className=\"text-base\">Auto-approve content</Label>\n                <p className=\"text-sm text-muted-foreground\">\n                  Automatically approve new content without requiring manual review\n                </p>\n              </div>\n              <Switch\n                checked={settings?.defaults?.campaignDefaults?.autoApprove || false}\n                onCheckedChange={(checked) => updateSetting('defaults.campaignDefaults.autoApprove', checked)}\n              />\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Organization Stats */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Users className=\"h-5 w-5\" />\n            Organization Overview\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"text-center p-4 border rounded-lg\">\n              <div className=\"text-2xl font-bold text-primary mb-1\">\n                {organization.membersCount || 0}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">Team Members</div>\n            </div>\n            \n            <div className=\"text-center p-4 border rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600 mb-1\">\n                Active\n              </div>\n              <div className=\"text-sm text-muted-foreground\">Status</div>\n            </div>\n            \n            <div className=\"text-center p-4 border rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600 mb-1\">\n                Pro\n              </div>\n              <div className=\"text-sm text-muted-foreground\">Plan</div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"