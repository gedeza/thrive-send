'use client';

import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Label } from '@/components/ui/label';
import { Separator } from '@/components/ui/separator';
import { Badge } from '@/components/ui/badge';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import { Switch } from '@/components/ui/switch';
import { Slider } from '@/components/ui/slider';
import { 
  Sun, 
  Moon, 
  Monitor, 
  Palette, 
  Eye, 
  Accessibility,\n  Check,\n  AlertCircle,\n  Loader2,\n  Info\n} from 'lucide-react';\nimport { useThemeSettings, useSettings } from '@/contexts/SettingsContext';\nimport { cn } from '@/lib/utils';\n\n// Color scheme options\ninterface ColorScheme {\n  id: string;\n  name: string;\n  primary: string;\n  secondary: string;\n  accent: string;\n  preview: React.ReactNode;\n}\n\nconst COLOR_SCHEMES: ColorScheme[] = [\n  {\n    id: 'blue',\n    name: 'Ocean Blue',\n    primary: '#007BFF',\n    secondary: '#6C757D',\n    accent: '#17A2B8',\n    preview: <div className=\"flex gap-1\"><div className=\"w-3 h-3 rounded bg-blue-500\" /><div className=\"w-3 h-3 rounded bg-gray-500\" /><div className=\"w-3 h-3 rounded bg-cyan-500\" /></div>\n  },\n  {\n    id: 'green',\n    name: 'Forest Green',\n    primary: '#28A745',\n    secondary: '#6C757D',\n    accent: '#20C997',\n    preview: <div className=\"flex gap-1\"><div className=\"w-3 h-3 rounded bg-green-500\" /><div className=\"w-3 h-3 rounded bg-gray-500\" /><div className=\"w-3 h-3 rounded bg-teal-500\" /></div>\n  },\n  {\n    id: 'purple',\n    name: 'Royal Purple',\n    primary: '#6F42C1',\n    secondary: '#6C757D',\n    accent: '#E83E8C',\n    preview: <div className=\"flex gap-1\"><div className=\"w-3 h-3 rounded bg-purple-500\" /><div className=\"w-3 h-3 rounded bg-gray-500\" /><div className=\"w-3 h-3 rounded bg-pink-500\" /></div>\n  },\n  {\n    id: 'orange',\n    name: 'Sunset Orange',\n    primary: '#FD7E14',\n    secondary: '#6C757D',\n    accent: '#DC3545',\n    preview: <div className=\"flex gap-1\"><div className=\"w-3 h-3 rounded bg-orange-500\" /><div className=\"w-3 h-3 rounded bg-gray-500\" /><div className=\"w-3 h-3 rounded bg-red-500\" /></div>\n  },\n  {\n    id: 'indigo',\n    name: 'Deep Indigo',\n    primary: '#6610F2',\n    secondary: '#6C757D',\n    accent: '#007BFF',\n    preview: <div className=\"flex gap-1\"><div className=\"w-3 h-3 rounded bg-indigo-500\" /><div className=\"w-3 h-3 rounded bg-gray-500\" /><div className=\"w-3 h-3 rounded bg-blue-500\" /></div>\n  },\n  {\n    id: 'teal',\n    name: 'Ocean Teal',\n    primary: '#20C997',\n    secondary: '#6C757D',\n    accent: '#28A745',\n    preview: <div className=\"flex gap-1\"><div className=\"w-3 h-3 rounded bg-teal-500\" /><div className=\"w-3 h-3 rounded bg-gray-500\" /><div className=\"w-3 h-3 rounded bg-green-500\" /></div>\n  }\n];\n\n// Theme preview component\ninterface ThemePreviewProps {\n  theme: 'light' | 'dark' | 'system';\n  colorScheme?: string;\n  isSelected: boolean;\n  onClick: () => void;\n}\n\nfunction ThemePreview({ theme, colorScheme, isSelected, onClick }: ThemePreviewProps) {\n  const getIcon = () => {\n    switch (theme) {\n      case 'light': return <Sun className=\"h-5 w-5\" />;\n      case 'dark': return <Moon className=\"h-5 w-5\" />;\n      case 'system': return <Monitor className=\"h-5 w-5\" />;\n    }\n  };\n  \n  const getLabel = () => {\n    switch (theme) {\n      case 'light': return 'Light';\n      case 'dark': return 'Dark';\n      case 'system': return 'System';\n    }\n  };\n  \n  const getBgClass = () => {\n    switch (theme) {\n      case 'light': return 'bg-white border-gray-200';\n      case 'dark': return 'bg-gray-900 border-gray-700';\n      case 'system': return 'bg-gradient-to-br from-white via-gray-100 to-gray-900';\n    }\n  };\n  \n  const getTextClass = () => {\n    switch (theme) {\n      case 'light': return 'text-gray-900';\n      case 'dark': return 'text-white';\n      case 'system': return 'text-gray-700';\n    }\n  };\n  \n  return (\n    <button\n      onClick={onClick}\n      className={cn(\n        'p-4 rounded-lg border-2 transition-all duration-200 flex flex-col items-center gap-3 min-h-[120px] hover:shadow-md',\n        isSelected \n          ? 'border-primary bg-primary/5 shadow-md' \n          : 'border-muted hover:border-muted-foreground/50',\n        getBgClass()\n      )}\n    >\n      <div className={cn('flex items-center gap-2', getTextClass())}>\n        {getIcon()}\n        <span className=\"font-medium\">{getLabel()}</span>\n      </div>\n      \n      {/* Theme preview mockup */}\n      <div className={cn(\n        'w-full h-8 rounded border flex items-center px-2 gap-1',\n        theme === 'light' ? 'bg-white border-gray-300' : \n        theme === 'dark' ? 'bg-gray-800 border-gray-600' :\n        'bg-gradient-to-r from-white to-gray-800 border-gray-400'\n      )}>\n        <div className=\"w-2 h-2 rounded-full bg-current opacity-60\" />\n        <div className=\"w-4 h-1 rounded bg-current opacity-40\" />\n        <div className=\"w-3 h-1 rounded bg-current opacity-30 ml-auto\" />\n      </div>\n      \n      {isSelected && (\n        <Badge variant=\"default\" className=\"text-xs\">\n          <Check className=\"h-3 w-3 mr-1\" />\n          Active\n        </Badge>\n      )}\n    </button>\n  );\n}\n\n// Color scheme picker\ninterface ColorSchemePickerProps {\n  selected?: string;\n  onSelect: (schemeId: string) => void;\n  disabled?: boolean;\n}\n\nfunction ColorSchemePicker({ selected, onSelect, disabled }: ColorSchemePickerProps) {\n  return (\n    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n      {COLOR_SCHEMES.map((scheme) => (\n        <button\n          key={scheme.id}\n          onClick={() => onSelect(scheme.id)}\n          disabled={disabled}\n          className={cn(\n            'p-4 rounded-lg border-2 transition-all duration-200 flex flex-col items-center gap-3 hover:shadow-md',\n            selected === scheme.id\n              ? 'border-primary bg-primary/5 shadow-md'\n              : 'border-muted hover:border-muted-foreground/50',\n            disabled && 'opacity-50 cursor-not-allowed'\n          )}\n        >\n          <div className=\"flex items-center gap-2\">\n            {scheme.preview}\n            <span className=\"text-sm font-medium\">{scheme.name}</span>\n          </div>\n          \n          {selected === scheme.id && (\n            <Badge variant=\"default\" className=\"text-xs\">\n              <Check className=\"h-3 w-3 mr-1\" />\n              Selected\n            </Badge>\n          )}\n        </button>\n      ))}\n    </div>\n  );\n}\n\n// Font size preview\ninterface FontSizePreviewProps {\n  size: 'small' | 'medium' | 'large';\n  isSelected: boolean;\n  onClick: () => void;\n}\n\nfunction FontSizePreview({ size, isSelected, onClick }: FontSizePreviewProps) {\n  const getSizeClass = () => {\n    switch (size) {\n      case 'small': return 'text-sm';\n      case 'medium': return 'text-base';\n      case 'large': return 'text-lg';\n    }\n  };\n  \n  const getLabel = () => {\n    switch (size) {\n      case 'small': return 'Small';\n      case 'medium': return 'Medium';\n      case 'large': return 'Large';\n    }\n  };\n  \n  return (\n    <button\n      onClick={onClick}\n      className={cn(\n        'p-4 rounded-lg border-2 transition-all duration-200 flex flex-col items-center gap-2 min-h-[100px]',\n        isSelected \n          ? 'border-primary bg-primary/5 shadow-md' \n          : 'border-muted hover:border-muted-foreground/50'\n      )}\n    >\n      <div className={cn('font-medium', getSizeClass())}>\n        {getLabel()}\n      </div>\n      <div className={cn('text-muted-foreground', getSizeClass())}>\n        Sample text\n      </div>\n      \n      {isSelected && (\n        <Badge variant=\"default\" className=\"text-xs\">\n          <Check className=\"h-3 w-3 mr-1\" />\n          Active\n        </Badge>\n      )}\n    </button>\n  );\n}\n\n// Main component\nexport default function ThemeAppearanceSettings() {\n  const { \n    theme, \n    colorScheme, \n    density, \n    fontSize, \n    reducedMotion, \n    highContrast, \n    setTheme, \n    setColorScheme, \n    setDensity \n  } = useThemeSettings();\n  const { state, updateUserSetting } = useSettings();\n  \n  const [previewTheme, setPreviewTheme] = useState<'light' | 'dark' | 'system'>(theme);\n  const [previewColorScheme, setPreviewColorScheme] = useState(colorScheme || 'blue');\n  const [hasChanges, setHasChanges] = useState(false);\n  \n  // Detect system theme preference\n  const [systemTheme, setSystemTheme] = useState<'light' | 'dark'>('light');\n  \n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setSystemTheme(mediaQuery.matches ? 'dark' : 'light');\n    \n    const handleChange = (e: MediaQueryListEvent) => {\n      setSystemTheme(e.matches ? 'dark' : 'light');\n    };\n    \n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n  \n  // Track changes\n  useEffect(() => {\n    const changed = previewTheme !== theme || previewColorScheme !== colorScheme;\n    setHasChanges(changed);\n  }, [previewTheme, previewColorScheme, theme, colorScheme]);\n  \n  // Apply theme changes\n  const handleApplyChanges = () => {\n    setTheme(previewTheme);\n    if (previewColorScheme !== colorScheme) {\n      setColorScheme(previewColorScheme);\n    }\n    setHasChanges(false);\n  };\n  \n  // Reset to current settings\n  const handleReset = () => {\n    setPreviewTheme(theme);\n    setPreviewColorScheme(colorScheme || 'blue');\n    setHasChanges(false);\n  };\n  \n  return (\n    <div className=\"space-y-8\">\n      {/* Theme Selection */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Palette className=\"h-5 w-5\" />\n            Theme Preference\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <ThemePreview\n              theme=\"light\"\n              isSelected={previewTheme === 'light'}\n              onClick={() => setPreviewTheme('light')}\n            />\n            <ThemePreview\n              theme=\"dark\"\n              isSelected={previewTheme === 'dark'}\n              onClick={() => setPreviewTheme('dark')}\n            />\n            <ThemePreview\n              theme=\"system\"\n              isSelected={previewTheme === 'system'}\n              onClick={() => setPreviewTheme('system')}\n            />\n          </div>\n          \n          {previewTheme === 'system' && (\n            <Alert>\n              <Info className=\"h-4 w-4\" />\n              <AlertDescription>\n                System theme will automatically switch between light and dark based on your device settings. \n                Current system preference: <strong>{systemTheme}</strong>\n              </AlertDescription>\n            </Alert>\n          )}\n        </CardContent>\n      </Card>\n      \n      {/* Color Scheme */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Palette className=\"h-5 w-5\" />\n            Color Scheme\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <ColorSchemePicker\n            selected={previewColorScheme}\n            onSelect={setPreviewColorScheme}\n            disabled={state.saving}\n          />\n        </CardContent>\n      </Card>\n      \n      {/* UI Density */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Eye className=\"h-5 w-5\" />\n            UI Density\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <RadioGroup\n            value={density}\n            onValueChange={(value: 'compact' | 'comfortable' | 'spacious') => {\n              setDensity(value);\n              updateUserSetting('appearance.density', value);\n            }}\n          >\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"flex items-center space-x-2 p-4 border rounded-lg\">\n                <RadioGroupItem value=\"compact\" id=\"compact\" />\n                <div className=\"flex-1\">\n                  <Label htmlFor=\"compact\" className=\"font-medium\">Compact</Label>\n                  <p className=\"text-sm text-muted-foreground\">More content, less spacing</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-2 p-4 border rounded-lg\">\n                <RadioGroupItem value=\"comfortable\" id=\"comfortable\" />\n                <div className=\"flex-1\">\n                  <Label htmlFor=\"comfortable\" className=\"font-medium\">Comfortable</Label>\n                  <p className=\"text-sm text-muted-foreground\">Balanced spacing</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-2 p-4 border rounded-lg\">\n                <RadioGroupItem value=\"spacious\" id=\"spacious\" />\n                <div className=\"flex-1\">\n                  <Label htmlFor=\"spacious\" className=\"font-medium\">Spacious</Label>\n                  <p className=\"text-sm text-muted-foreground\">More breathing room</p>\n                </div>\n              </div>\n            </div>\n          </RadioGroup>\n        </CardContent>\n      </Card>\n      \n      {/* Font Size */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Eye className=\"h-5 w-5\" />\n            Font Size\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <FontSizePreview\n              size=\"small\"\n              isSelected={fontSize === 'small'}\n              onClick={() => updateUserSetting('appearance.fontSize', 'small')}\n            />\n            <FontSizePreview\n              size=\"medium\"\n              isSelected={fontSize === 'medium'}\n              onClick={() => updateUserSetting('appearance.fontSize', 'medium')}\n            />\n            <FontSizePreview\n              size=\"large\"\n              isSelected={fontSize === 'large'}\n              onClick={() => updateUserSetting('appearance.fontSize', 'large')}\n            />\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Accessibility Options */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Accessibility className=\"h-5 w-5\" />\n            Accessibility\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label className=\"text-base\">High contrast mode</Label>\n                <p className=\"text-sm text-muted-foreground\">\n                  Increases contrast between text and background for better readability\n                </p>\n              </div>\n              <Switch\n                checked={highContrast}\n                onCheckedChange={(checked) => updateUserSetting('appearance.highContrast', checked)}\n              />\n            </div>\n            \n            <Separator />\n            \n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label className=\"text-base\">Reduce motion</Label>\n                <p className=\"text-sm text-muted-foreground\">\n                  Reduces animations and transitions for users with motion sensitivity\n                </p>\n              </div>\n              <Switch\n                checked={reducedMotion}\n                onCheckedChange={(checked) => updateUserSetting('appearance.reducedMotion', checked)}\n              />\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Apply Changes */}\n      {hasChanges && (\n        <Card className=\"border-amber-200 bg-amber-50\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2 text-amber-800\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <span className=\"text-sm font-medium\">You have unsaved theme changes</span>\n              </div>\n              \n              <div className=\"flex items-center gap-2\">\n                <Button variant=\"outline\" size=\"sm\" onClick={handleReset}>\n                  Reset\n                </Button>\n                <Button \n                  size=\"sm\" \n                  onClick={handleApplyChanges}\n                  disabled={state.saving}\n                >\n                  {state.saving ? (\n                    <>\n                      <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                      Applying...\n                    </>\n                  ) : (\n                    'Apply Changes'\n                  )}\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}"