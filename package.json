{
  "name": "thrive-send",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "pnpm hooks:check && next dev",
    "build": "pnpm hooks:check && next build",
    "start": "next start",
    "lint": "next lint",
    "test": "jest --passWithNoTests",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:all": "pnpm test && pnpm test:e2e",
    "server:dev": "nodemon --exec ts-node src/server.ts",
    "postinstall": "prisma generate",
    "db:generate": "prisma generate",
    "hooks:check": "node scripts/hooks-check.js",
    "hooks:setup": "chmod +x ./scripts/setup-gatekeeper.sh && ./scripts/setup-gatekeeper.sh",
    "hooks:analyze": "chmod +x ./scripts/optimization-gatekeeper.sh && ./scripts/optimization-gatekeeper.sh",
    "hooks:metrics": "node -e \"const { OptimizationMetrics } = require('./src/lib/hooks/optimization-metrics'); console.log(JSON.stringify(new OptimizationMetrics().generateReport(), null, 2));\"",
    "analyze:bundle": "node scripts/analyze-bundle.js",
    "analyze:performance": "pnpm analyze:bundle && echo 'Bundle analysis complete!'",
    "worker:start": "ts-node scripts/start-email-worker.ts",
    "worker:dev": "nodemon --exec ts-node scripts/start-email-worker.ts",
    "queue:stats": "ts-node -e \"import('./src/lib/queue/index').then(q => q.EmailQueueManager.getQueueStats()).then(console.log)\"",
    "queue:clear": "ts-node -e \"import('./src/lib/queue/index').then(q => q.EmailQueueManager.clearQueue('all')).then(() => console.log('Queue cleared'))\"",
    "db:optimize": "ts-node scripts/apply-database-optimizations.ts",
    "db:health": "ts-node -e \"import('./src/lib/db/enhanced-prisma-client').then(db => db.enhancedPrisma.healthCheck()).then(console.log)\"",
    "db:metrics": "ts-node -e \"import('./src/lib/db/enhanced-prisma-client').then(db => db.enhancedPrisma.getPerformanceMetrics()).then(console.log)\"",
    "db:reset-metrics": "ts-node -e \"import('./src/lib/db/enhanced-prisma-client').then(db => db.enhancedPrisma.resetMetrics()).then(() => console.log('Metrics reset'))\"",
    "cache:health": "ts-node -e \"import('./src/lib/cache/index').then(cache => cache.cacheService.healthCheck()).then(console.log)\"",
    "cache:stats": "ts-node -e \"import('./src/lib/cache/index').then(cache => cache.cacheService.getStats()).then(console.log)\"",
    "cache:clear": "ts-node -e \"import('./src/lib/cache/index').then(cache => cache.getCacheManager().clearAll()).then(() => console.log('Cache cleared'))\"",
    "cache:warm": "ts-node scripts/warm-cache.ts",
    "rate-limit:health": "ts-node -e \"import('./src/lib/rate-limiting/index').then(rl => rl.rateLimitService.healthCheck()).then(console.log)\"",
    "rate-limit:metrics": "ts-node -e \"import('./src/lib/rate-limiting/index').then(rl => rl.rateLimitService.getMetrics()).then(console.log)\"",
    "rate-limit:reset": "ts-node -e \"import('./src/lib/rate-limiting/index').then(rl => rl.rateLimitService.resetOrganizationLimits(process.argv[2] || 'test')).then(console.log)\" --",
    "monitoring:health": "ts-node -e \"import('./src/lib/monitoring/index').then(m => m.monitoringService.getSystemHealth()).then(console.log)\"",
    "monitoring:dashboard": "ts-node -e \"import('./src/lib/monitoring/index').then(m => m.monitoringService.getDashboardData()).then(console.log)\"",
    "monitoring:alerts": "ts-node -e \"import('./src/lib/monitoring/index').then(m => m.monitoringService.getActiveAlerts()).then(console.log)\"",
    "monitoring:export": "ts-node -e \"import('./src/lib/monitoring/index').then(m => console.log(m.monitoringService.exportMetrics('json')))\"",
    "db:replica-health": "ts-node -e \"import('./src/lib/db/index').then(db => db.getReadReplicaManager().getReplicaStatus()).then(console.log)\"",
    "db:replica-stats": "ts-node -e \"import('./src/lib/db/index').then(db => db.getReadReplicaManager().getConnectionStats()).then(console.log)\"",
    "db:router-stats": "ts-node -e \"import('./src/lib/db/index').then(db => db.getDatabaseRouter().getRoutingStats()).then(console.log)\"",
    "db:force-health-check": "ts-node -e \"import('./src/lib/db/index').then(db => db.getReadReplicaManager().forceHealthCheck()).then(() => console.log('Health check completed'))\"",
    "delivery:health": "ts-node -e \"import('./src/lib/email/delivery-tracker').then(dt => dt.deliveryTracker.healthCheck()).then(console.log)\"",
    "delivery:export": "ts-node -e \"const org = process.argv[2] || 'test'; import('./src/lib/email/delivery-tracker').then(dt => dt.deliveryTracker.exportDeliveryData(org, {format: 'csv'})).then(console.log)\" --",
    "delivery:cleanup": "ts-node -e \"import('./src/lib/email/delivery-tracker').then(dt => dt.deliveryTracker.cleanupOldData()).then(console.log)\"",
    "delivery:stats": "ts-node -e \"const org = process.argv[2] || 'test'; import('./src/lib/email/delivery-tracker').then(dt => dt.deliveryTracker.getRealTimeStats(org)).then(console.log)\" --",
    "test:systems": "ts-node scripts/test-systems.ts",
    "health": "ts-node scripts/check-health.ts"
  },
  "dependencies": {
    "@aws-sdk/client-ses": "^3.848.0",
    "@clerk/clerk-sdk-node": "^5.1.6",
    "@clerk/nextjs": "^6.21.0",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/modifiers": "^9.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@hookform/resolvers": "^5.1.0",
    "@prisma/client": "6.9.0",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-checkbox": "^1.0.4",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.0.7",
    "@radix-ui/react-radio-group": "^1.3.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.0.4",
    "@radix-ui/react-toast": "^1.1.5",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@sendgrid/mail": "^8.1.5",
    "@tanstack/react-query": "^5.80.6",
    "@tiptap/extension-code-block-lowlight": "^2.25.0",
    "@tiptap/extension-highlight": "^2.25.0",
    "@tiptap/extension-image": "^2.14.0",
    "@tiptap/extension-link": "^2.14.0",
    "@tiptap/extension-placeholder": "^2.25.0",
    "@tiptap/extension-table": "^2.25.0",
    "@tiptap/extension-table-cell": "^2.25.0",
    "@tiptap/extension-table-header": "^2.25.0",
    "@tiptap/extension-table-row": "^2.25.0",
    "@tiptap/extension-text-align": "^2.14.0",
    "@tiptap/extension-underline": "^2.25.0",
    "@tiptap/react": "^2.14.0",
    "@tiptap/starter-kit": "^2.14.0",
    "@types/ioredis": "^5.0.0",
    "@types/jszip": "^3.4.1",
    "@types/nodemailer": "^6.4.17",
    "bullmq": "^5.56.4",
    "chart.js": "^4.4.9",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "cmdk": "^1.1.1",
    "cropperjs": "1.6.2",
    "date-fns": "3.6.0",
    "date-fns-tz": "3.2.0",
    "framer-motion": "^12.16.0",
    "gray-matter": "^4.0.3",
    "ioredis": "^5.6.1",
    "jszip": "^3.10.1",
    "lowlight": "^3.3.0",
    "lucide-react": "^0.279.0",
    "next": "^14.2.29",
    "next-themes": "^0.4.6",
    "nodemailer": "^7.0.5",
    "pino": "^9.7.0",
    "react": "^18.0.0",
    "react-chartjs-2": "^5.3.0",
    "react-cropper": "^2.3.3",
    "react-day-picker": "^8.8.2",
    "react-dom": "^18.0.0",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.57.0",
    "react-markdown": "^10.1.0",
    "react-window": "^1.8.11",
    "recharts": "^2.15.3",
    "rehype-raw": "^7.0.0",
    "remark-gfm": "^4.0.1",
    "resend": "^4.5.2",
    "sonner": "^2.0.5",
    "tailwind-merge": "^2.0.0",
    "tailwindcss-animate": "^1.0.7",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "zod": "^3.25.55"
  },
  "devDependencies": {
    "@babel/plugin-transform-class-properties": "^7.27.1",
    "@babel/plugin-transform-private-methods": "^7.27.1",
    "@babel/preset-env": "^7.27.2",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@playwright/test": "^1.40.0",
    "@testing-library/jest-dom": "^6.0.0",
    "@testing-library/react": "^14.0.0",
    "@types/node": "^20.0.0",
    "@types/react": "^18.0.0",
    "@types/react-dom": "^18.0.0",
    "@types/react-window": "^1.8.8",
    "@types/uuid": "^10.0.0",
    "autoprefixer": "^10.4.0",
    "eslint": "^8.0.0",
    "eslint-config-next": "^14.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "nodemon": "^3.0.0",
    "postcss": "^8.4.0",
    "prisma": "6.9.0",
    "react-devtools": "^6.1.5",
    "tailwindcss": "^3.3.0",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.0",
    "typescript": "^5.0.0"
  }
}
